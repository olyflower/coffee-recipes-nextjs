generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int              @id @default(autoincrement())
  username  String?         
  name      String?
  image     String?
  emailVerified DateTime?
  email     String           @unique
  isAdmin   Boolean          @default(false)
  createdAt DateTime         @default(now())

  recipes   CoffeeRecipe[]
  accounts  Account[]
  sessions  Session[]
}

model Account {
  id                 Int     @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model CoffeeFact {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime @default(now())
}

model CoffeeRecipe {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  steps       String
  createdAt   DateTime @default(now())
  photoUrl    String?
  order       Int?


  userId Int?
  user   User?     @relation(fields: [userId], references: [id])
}